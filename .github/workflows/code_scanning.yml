name: Code scanning

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "28 4 * * 5"

permissions: read-all

jobs:
  codeql:
    name: CodeQL

    runs-on: ubuntu-latest

    env:
      CGO_ENABLED: 1

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Setup Go
        uses: actions/setup-go@d0a58c1c4d2b25278816e339b944508c875f3613
        with:
          go-version-file: go.mod
          cache: true

      - name: Install libpcap
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -q
          sudo apt-get install -q -y libpcap-dev

      - name: Initialize CodeQL
        uses: github/codeql-action/init@b2a92eb56d8cb930006a1c6ed86b0782dd8a4297
        with:
          languages: go

      - name: Build
        run: go build .

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@b2a92eb56d8cb930006a1c6ed86b0782dd8a4297
        with:
          category: "/language:go"

  scorecard:
    name: OSSF Scorecards

    runs-on: ubuntu-latest

    permissions:
      security-events: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          persist-credentials: false

      - name: Run analysis
        uses: ossf/scorecard-action@99c53751e09b9529366343771cc321ec74e9bd3d
        with:
          results_file: results.sarif
          results_format: sarif
          repo_token: ${{ secrets.SCORECARD_READ_TOKEN }}
          publish_results: true

      - name: Upload results
        if: ${{ github.event_name != 'pull_request' }}
        uses: github/codeql-action/upload-sarif@b2a92eb56d8cb930006a1c6ed86b0782dd8a4297
        with:
          sarif_file: results.sarif

  sonarcloud:
    name: SonarCloud

    runs-on: windows-latest

    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_out
      CGO_ENABLED: 1

    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@d0a58c1c4d2b25278816e339b944508c875f3613
        with:
          go-version-file: go.mod
          cache: true

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@f218be71ddd704dcf7f1b761caa6ffb14134094a

      - name: Run build-wrapper
        run: >-
          build-wrapper-win-x86-64
          --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }}
          go build .

      - name: Run sonar-scanner
        run: >-
          sonar-scanner
          --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
          --define sonar.projectKey=Sparta142_goblade
          --define sonar.organization=sparta142
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
