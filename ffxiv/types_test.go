package ffxiv

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/assert"
)

var rawBundle = [288]byte{
	0x52, 0x52, 0xa0, 0x41, 0xff, 0x5d, 0x46, 0xe2,
	0x7f, 0x2a, 0x64, 0x4d, 0x7b, 0x99, 0xc4, 0x75,
	0x53, 0xfe, 0xa8, 0x30, 0x7a, 0x01, 0x00, 0x00,
	0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xf8, 0x00, 0x00, 0x00, 0x63, 0x25, 0x6d, 0x10,
	0x63, 0x25, 0x6d, 0x10, 0x03, 0x00, 0x00, 0x00,
	0x14, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x22, 0x02,
	0xa3, 0x10, 0xd1, 0x60, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x20, 0x00, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x22, 0x53, 0x6f, 0x6d, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x20, 0x6d, 0x79, 0x20,
	0x67, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x20, 0x69,
	0x73, 0x2e, 0x2e, 0x2e, 0x20, 0x69, 0x74, 0x27,
	0x73, 0x20, 0x61, 0x6c, 0x6d, 0x6f, 0x73, 0x74,
	0x20, 0x66, 0x72, 0x69, 0x67, 0x68, 0x74, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x22, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
}

func TestImplementsUnmarshaler(t *testing.T) {
	objects := []interface{}{
		&BundleHeader{},
		&Bundle{},
		&SegmentHeader{},
		&Segment{},
	}

	for _, object := range objects {
		assert.Implements(t, (*Unmarshaler)(nil), object)
	}
}

func TestBundle_Unmarshal(t *testing.T) {
	var bundle Bundle
	bundle.Unmarshal(bytes.NewReader(rawBundle[:]))

	assert.EqualValues(t, 1624314019411, bundle.Epoch)
	assert.EqualValues(t, 288, bundle.Length)
	assert.EqualValues(t, 0, bundle.ConnType)
	assert.EqualValues(t, 1, bundle.SegmentCount)
	assert.EqualValues(t, 1, bundle.Encoding)
	assert.EqualValues(t, 0, bundle.Compression)
	// TODO: Test the bundle's segments
}
